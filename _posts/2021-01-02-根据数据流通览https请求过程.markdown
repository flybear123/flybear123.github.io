# https通信过程
https通信无处不在，介绍文章也很多，但总是觉得网上知识点比较零散、书籍如tcp/ip协议详解之类的教科书又过于注重细节，本文的初衷是综合各方面资源的知识，串联起来，把https通信过程这只大象全貌展示出来，而不是只是展示一只象腿被初学者理解为柱子，或者过于详细而陷入知识汪洋而迷茫。
### 网络请求的流程图
- 一段文字或者图片，从一台电脑通过因特网发送并显示在另外一台电脑的屏幕上，这段数据传输的整个过程，可以看到网络通信的全貌。接下来的篇幅以A发送“您好！”到b显示的过程，讲解网络通信的过程。网络请求的整体流程可以简单浓缩为下图：
![](https://raw.githubusercontent.com/flybear123/MyBlog/develop/images/generalFlow.png)
- 根据实际的过程，可以分为三个过程：建立连接过程，发送和接收数据过程，断开连接过程

### 建立连接过程
- 一、应用层：DNS域名解析
- 二、传输层：建立TCP连接
- 三、网络层：IP寻址定位目标地址
- 四、数据链路层和物理层，通过MAC寻址找到接收端、即服务端的硬件端口，并通过网线向接收端发送二进制数据信息

### 发送数据过程
- 五、应用层：建立SSL安全嵌套层的连接，保证数据传输安全性
- 六、应用层：发送http请求及其数据响应处理

### 断开连接过程
- 七、传输层：断开TCP连接

### 一、应用层：DNS域名解析
A在电脑qq上向b发送“您好！”数据，应用层以固定的数据包格式封装数据，请求端定义好是get、post、或者其他方式，是否选择加密方式（https）等，具体包括请求行，请求头，请求体。请求行包括请求方法、URL、协议版本；请求头定义contentType，支持语言，缓存策略等；请求体主要是包含封装好数据的结构体，通常iOS使用json数据作为服务端和客户端的通信格式。域名解析通常在客户端存在缓存，在DNS缓存均未命中时才请求DNS服务端。否则的话按照一定的顺序取缓存：判断浏览器或者app IP地址缓存；判断本机本地或者手机端是否存在该IP地址，电脑端常用的hosts文件就存储了大量的IP地址，之前一些流氓浏览器的做法是直接修改hosts文件强行定位到自身浏览器的ip，偷梁换柱为自身浏览器带来更多流量；判断本地运营商是否有缓存该IP地址；最后才请求根域名解析服务器。

### 二、传输层：建立TCP连接
如果是http，第二步就是建TCP连接了，但作为https在http的基础上多了ssl层（security sock layer）安全嵌套层，在建立连接的同时对数据做了加密传输证书验证确保数据安全性。https验证安全性的过程：
#### 1. 验证服务器的数字证书
数字证书包括数字签名和摘要信息。数字签名是摘要信息使用公钥加密而成。服务器的数字证书需要来自权威机构颁发的证书，客户端使用服务端返回的数字证书里面的数字签名使用私钥解密，看解密后的摘要信息和原摘要信息一致，才开始下一部的动作。
#### 2. 使用非对称加密传输共享密钥
保证服务端是目标通讯服务器之后，客户端发送加密方式、信息给服务端。服务端使用私钥解密客户端发送过来的数据。这个时候，服务端也准备好了共享密钥，两边就可以使用对称加密的方式，使用共享密钥解密信息了。
#### 3. 使用对称加密传输数据
客户端和服务器确定好了加密方式后，就使用共享密钥加解密数据进行通信。为什么要使用对称加密传输数据？主要是对称加密算法传输数据方式简单，不像非对称加密具有那么复杂的加解密过程，这样具有大量数据通信的时候可以保证传输的效率和速度。

经过以上三个步骤之后，找到了正确的通信目标，就开始建立连接的三次握手了。“您好！”数据已经经过应用层，达到了传输层（TCP）。传输层主要的工作是给通信过程加上三次握手和四次挥手的TCP过程。客户端主动发起SEQ=1，此动作seq = x，服务器收到ACK之后，会回应一个ACK = 1，此动作回复的seq = x+1，ack = y；如果客户端收到了服务器的ACK，那么客户端会再次发送一个确认包ACK = 1，此动作的 ack = y+1。这个时候，三次握手动作已经完成，两端就可以进入收发数据的流程了。服务器和客户端的三次握手任意一个步骤未收到对方的回应，在规定的最大等待时间到了之后都会再次发送信息让对方确认，此确认信息的ack或者是seq的值保持不变，确保通信的对方能够确定此确认信息是针对哪个步骤的重发。


### 三、网络层：IP寻址定位目标地址
网络层主要是通过路由协议找到目标，确保数据从源地址以最优路径正确发往目标地址。用户通信的请求是一条url，通过DNS解析之后得到域名地址对应的IP地址，此IP地址就是目标地址。通过路由算法，网络层计算出一条合适的路径找到目标地址，顺利送达数据。

### 四、数据链路层和物理层
数据由发送端的数据链路层发到目标地址，也即是接受端的数据链路层，数据在显示之前要通过层层解包，网络层确保目标地址是自己，传输层确保握手，应用层确保数据的结构体各部分的解析。

### 五、应用层：建立SSL安全嵌套层的连接，保证数据传输安全性


### 六、应用层：发送http请求及其数据响应处理
四次挥手过程是在通信完成之后，由客户端主动发起的中断连接动作。客户端首先发起了中断请求，告诉服务器：“我要准备断开连接了”。服务器返回相应：“我已收到你的中断连接请求，你可以断开了”。于是客户端发起中断请求，同时等待服务端的最后确认。服务端返回相应：“中断命令收到，我已断开连接”，同时服务端就把连接断开了。客户端收到服务端已经断开的相应，于是把自己的连接断开。

这样，一个简单却完整的单向的网络通信数据流过程就完成了。
