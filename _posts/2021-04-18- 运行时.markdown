# 深入全面了解iOS开发运行时机制

### 什么是运行时
运行时，是OC语言的一个最重要特征。代码在编辑阶段，并没有固定所有的方法具体实现内容，在运行时，才载入对应的代码执行片段。这种实现方式，极大的缩短了编译阶段的时间和减轻了复杂度，同时，因为这种方法在运行时才确定执行的代码段的运行方式，可以方便地在底层进行方法替换，更改执行的方法，增强实现的灵活性。


### 运行时涉及的关键数据结构

OC的对象，在64位系统，即5S以上机型上，是一个占8字节的结构体，里面具有一个8字节的isa指针。实例对象的方法，变量，协议，分类等列表，存储在类对象里面，类对象的类方法，变量，协议等，存储在元类对象里面，元类对象的方法，变量，协议等存储在根类对象里面。实例对象的isa指针指向类对象，类对象的isa指针指向元类对象，元类对象的isa指针指向根类对象，根类对象的isa指针指向NSObject。

### 运行时实现流程

OC方法的调用[animal eat]调用，本质上是转换为消息机制的方法调用[msg send],方法执行的时候，首先查看当前类对象的cache列表是否已经存在该缓存方法，如果有，直接调用执行，如果没有，则查看类对象方法列表，有则执行无则继续查看父类对象是否存在该方法，有则执行无则继续查看元类对象的方法列表，有则执行，无则进入三次消息转发机制的阶段。在三次消息转发阶段可以对方法进行处理，决定是否向下继续执行or中断当前的方法执行。如果这三次转发过程未进行拦截或处理操作，此方法找不到，会报一个unrecognized selector的经典报错，进而app crash.中途进行处理的过程，主要是可以对方法进行重定向，新添加执行代码的处理，逆向app的hook就是在此阶段进行的方法替换处理，如果想在底层改动系统方法的调用，也是在此处对方法进行拦截，进而做期望的处理工作。

### 运行时的各种应用场合
1.模型解析

2.系统方法替换

3.类方法，实例方法hook

3.1 崩溃分析

3.2 逆向app实现破解功能

3.3 热更新
