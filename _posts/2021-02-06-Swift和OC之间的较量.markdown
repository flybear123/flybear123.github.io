# Swift和OC语言之间的较量

毫无疑问，现在Swift已经大幅胜出。TIOBE权威网站统计（2020.09数据，现在可能更高），编程语言排名中，Swift以1.38%的占有率排名第十二位，OC0.85%的占有率排名第19位。美国区top100支持Swift的app比例为81%。今天要比较的是Swift语言的优缺点，是哪些特质让Swift在苹果开发中一骑绝尘，地位不断上升。
### 1. Swift语言更安全

#### 1.1 强解包保证空数据带来的崩溃问题、
Swift是抢类型的语言，默认情况对象不能为nil，只有在初始化的时候才会使用，否则会编译报错。Swift使用的过程会大量采用guard，if let进行optional类型的数据解包操作，让代码更安全，简介，降低了类似OC那种因为对象为nil导致的崩溃或者难以定位问题的报错情况。

#### 1.2 在编译阶段编译器能杜绝更多的错误出现】
Swift具有静态调度安全的特性，在编译的时候就可以提前发现很多的问题，避免了这些问题带入运行时候才出现的情况。从大量开发者反馈的统计数据看，Swift的整体崩溃率是低于OC的，主要是因为编译器在前期做了很多的工作。

### 2. Swift语言编译速度在不断提高
由于Swift语言是一门静态语言，所以相对OC来说，Swift在编译上的时间会比较长，特别是一些未曾编译过的情况对比，例如clean之后的编译时长对比，OC是相对有优势的。但是苹果一直在致力于Swift编译器的大力改造。OC的编译器，前端使用的是clang，后端使用的是LLVM；Swift编译器，前端使用的是swit，后端也是使用LLVM。Swift语言的核心在于SIL的大量优化，在分析和高级优化方面，做了三种类型的性能优化：灵活性、安全性和ARC内存管理。

### 3. Swift语言能更优雅实现各种设计
泛型、协议扩展等Swift语言的新特性让代码的设计更加优雅，复用率更高，代码更加灵活实现各种各样的设计。元组、关联枚举、各种数据处理的方式可供使用，如数组的map、filter、find等特性，让实现方式变得高效。Swift还引入了结构体作为值类型的对象结构，可以做到更好的内存管理方式，同时保证线程安全。相比Swift工程在引入framework，各种组件、第三方库中因为命名冲突导致的问题，Swift有很好的解决方案。Swift引入模块的概念，访问的权限包括private、internal、fileprivate、public、open五种等级，让模块的管理更加符合规范。

### 4. Swift生成的安装包更小
对两种语言如果均熟练的掌握，实现同样的功能，Swift的代码量会比OC减少15%-30%。而且由于编译器的支持，使用Swift打包出来的ipa包比OC更小。

### 5. Swift未来的支持更好
Swift语言从开始出现的时候就是开源的，它是一门静态的语言，苹果在强力的支持着Swift社区的发展，近几年来优化力度很大，吸收其他语言的优点，引入很多优秀的元素。随着ABI的问题，Swift的兼容性从一开始的繁琐，到现在的通过Swift5.0及其以上的编译器编译出来的二进制可以运行在5.0以上的任何系统上，升级Swift语言版本不会再带来像以前那种有一大堆的报错要处理的情况。
### 6. Swift运行速度快
Swift的类包括值类型和引用类型，值类型并没有引用计数，存储于栈区，通过栈区入栈出栈，Swift大幅度减少了堆区内存分配和回收操作，相比OC通过栈区的指针指向堆区进行数据函数操作的行为，Swift直接操作栈区，少了一步，提升了速度。
对于OC，编译器并不能通过消息发送来消除动态的调度，也无法执行任何的分析和进行内联。而使用Swift编译器具有更多信息，在很多情况可以消除动态调度，带来性能和运行速度的提升。